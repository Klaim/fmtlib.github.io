<pre class='metadata'>
Title: Text Parsing
Shortname: D1524
Revision: 0
Audience: LEWG
Status: D
Group: WG21
URL: http://wg21.link/D1524R0
Editor: Victor Zverovich, viz@fmt.dev
Abstract:
  This paper discusses a text parsing facility to complement the text formatting
  functionality of [[P0645]].
Date: 2019-05-19
Markup Shorthands: markdown yes
</pre>

Overview
========

[[P0645]] has proposed a text formatting facility that provides a safe and
extensible alternative to the `printf` family of function. This paper explores
the possibility of adding a symmetric parsing facility which is based on the
same design principles and shares many features with [[P0645]].

According to the C and C++ codesearch engine based on the ACTCD19 dataset
([[CODESEARCH]]), there are 389,848 calls to `sprintf` and 87,815 calls to
`sscanf` at the time of writing. So although formatted input functions are
less popular than their output counterparts, they are still widely used.

TODO: chrono

TODO: illustrate why scanf is unsafe

Python doesn't have a `scanf` equivalent in the standard library but there is
a separate parse package: https://pypi.org/project/parse/

TODO: API example

Design
======

It is intended to complement the existing C++ I/O streams library and integrate
well with the chrono library.

* Format strings (including compile-time processing)
* Safety
* Extensibility
* Locale support
* Positional arguments
* Performance
* Binary footprint
* Impact on existing code

Examples

TODO: chrono (compare with parse)

auto d = std::chrono::duration();
std::scan("10:30", "{0:%H:%M}", d);

Questions:

Do we want this?

Existing work:

https://github.com/eliaskosunen/scnlib

<pre class=biblio>
{
  "P0645": {
	  "title": "Text Formatting",
	  "authors": ["Victor Zverovich"],
	  "href": "https://wg21.link/p0645"
  },
  "CODESEARCH": {
	  "title": "Code search engine website",
	  "authors": ["Andrew Tomazos"],
	  "href": "https://codesearch.isocpp.org"
  }
}
</pre>